//Alunos : Marcelo , Alielson , Gustavo , Lucas Oliveira
import java.awt.Frame;
import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.LinkedList;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

public class AppMenu extends javax.swing.JFrame {
     
    public static void setPosicao(int posicao) {
        AppMenu.posicao = posicao;
    }

    public static boolean Verificado(){
        return verificado;
    }
    public static void metodoMenu(Aviador a, int opcao, boolean mudou) {
        switch(opcao){
            case 1: // Para o cadastro
                int cont = 0;
                String s;
                verificado = true;
                if(a!=null){ // esse a!= é para dizer se o aviador a for diferente de nulo(0) ele vai executar um for para prosseguir o passo de dizer se ja ta cadastrado ou não
                    for(Aviador avi : piloto){
                        if(avi.getNomeDoAviador().equalsIgnoreCase(a.getNomeDoAviador()) || (avi.getRegistroProf()== a.getRegistroProf()) || (avi.getNumeroBreve()== a.getNumeroBreve()) || (avi.getEmail().equalsIgnoreCase(a.getEmail()))){ // coloquei o email , porque nao existe mais de 1 email igual
                            verificado = false; 
                            break;//parada do for quando achar um piloto com o mesmo nome ou registroProf ou numeroBreve
                        }
                    }
                    if(!verificado){
                        //JOptionPane.showMessageDialog(null, "Já existe um piloto cadastrado com esses dados"+"("+cont+") "+"\n1 - Nome ja cadastrado "+"\n2 -Numero do Brevê ja cadastrado"+"\n3 -Número de registro ja cadastrado"+"\n4 -Nome e Registro ja cadastrados"+"\n5 -Nome e Número de Brevê ja cadastrados"+"\n6 -Registro e Número de Brevê ja cadastrados"+"\n7 -Nome , Registro e Número de Brevê ja cadastrados");          
                        JOptionPane.showMessageDialog(null, "Já existe um piloto cadastrado com esses dados (Verifique o nome,email,numero de brevê ou registro)");         
                    }else{
                        piloto.add(a);//Se os dados do aviador forem diferentes , o aviador vai ser adicionado 
                    }
                }
                break;
            case 2: //Para a alteração
                verificado = true;
                               
                piloto.set(posicao, a);
                
                break;//para o case 2 
        }
    }
    public AppMenu() {
        if(p.isFile("Aviador.ser")){
            p.setupLer("Aviador.ser");// para ler o arquivo Aviador.ser
        if (p.getContinua()== true){//caso o arquivo não esteja vazio, ele carregará o que tem salvo no arquivo
            p.readRecords();
            p.cleanupLer();
            piloto = p.getPiloto();
            System.out.println("Leitura do arquivo feita!");
            System.out.println("Pilotos cadastrados: " + piloto.size());
        }
        }  
        
        initComponents();
        JLabel foto = new JLabel("");
        foto.setBounds(0, 0, 1280, 890);
        ImageIcon imagem = new ImageIcon(AppMenu.class.getResource("/Aeronave.jpg"));
        Image imag = imagem.getImage().getScaledInstance(foto.getWidth(), foto.getHeight(), Image.SCALE_DEFAULT);
        foto.setIcon(new ImageIcon(imag));
        desktopPainel.add(foto);
        
        addWindowListener(new WindowAdapter()
        {
            public void windowClosing(WindowEvent e)
            {
                //Quando clicar em sair , tudo vai ser salvo no arquivo Aviador.ser
                p.setupGravar("Aviador.ser");
                p.addRecords1(piloto);
                p.cleanupGravar();
                //fim do salvamento em arquivo
                System.exit(0);//quando clicar em Sair, fechará o programa
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        desktopPainel = new javax.swing.JDesktopPane();
        foto = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuCadastro = new javax.swing.JMenuItem();
        jMenuConsulta = new javax.swing.JMenuItem();
        jMenuAltera = new javax.swing.JMenuItem();
        jMenuListar = new javax.swing.JMenuItem();
        jMenuSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pilotos");
        setBackground(new java.awt.Color(204, 204, 204));
        setResizable(false);

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        desktopPainel.setBackground(new java.awt.Color(102, 102, 102));
        desktopPainel.setName(""); // NOI18N
        desktopPainel.setRequestFocusEnabled(false);

        desktopPainel.setLayer(foto, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout desktopPainelLayout = new javax.swing.GroupLayout(desktopPainel);
        desktopPainel.setLayout(desktopPainelLayout);
        desktopPainelLayout.setHorizontalGroup(
            desktopPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(desktopPainelLayout.createSequentialGroup()
                .addComponent(foto, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 611, Short.MAX_VALUE))
        );
        desktopPainelLayout.setVerticalGroup(
            desktopPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(foto, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
        );

        jMenuBar1.setBackground(new java.awt.Color(153, 153, 153));

        jMenu1.setText("Opção");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuCadastro.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuCadastro.setText("Cadastro de piloto");
        jMenuCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCadastroActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCadastro);

        jMenuConsulta.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        jMenuConsulta.setText("Consulta de piloto");
        jMenuConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuConsultaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuConsulta);

        jMenuAltera.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        jMenuAltera.setText("Alterar dados de piloto");
        jMenuAltera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAlteraActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuAltera);

        jMenuListar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        jMenuListar.setText("Pilotos cadastrados");
        jMenuListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuListarActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuListar);

        jMenuSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuSair.setText("Sair");
        jMenuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSairActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuSair);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPainel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPainel)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuConsultaActionPerformed

        if(consultaTela == null){//verifica se existe um objeto do consultaTela, se existir abre a tela
            consultaTela = new AppConsulta(piloto);
            pack();
            desktopPainel.add(consultaTela);
            consultaTela.setVisible(true);            
        }
        else if(consultaTela.isClosed()){////caso exista e esteja fechado, abre outra janela
            consultaTela = new AppConsulta(piloto);
            pack();
            desktopPainel.add(consultaTela);
            consultaTela.setVisible(true);            
        }
    }//GEN-LAST:event_jMenuConsultaActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed

    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCadastroActionPerformed

        if(cadastroTela == null){//verifica se existe um objeto do cadastroTela, se existir abre a tela
            cadastroTela = new AppCadastro();
            pack();
            desktopPainel.add(cadastroTela);
            cadastroTela.setVisible(true);            
        }
        else if(cadastroTela.isClosed()){//caso exista e esteja fechado, abre outra janela
            cadastroTela = new AppCadastro();
            pack();
            desktopPainel.add(cadastroTela);
            cadastroTela.setVisible(true);            
        }
    }//GEN-LAST:event_jMenuCadastroActionPerformed

    private void jMenuAlteraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAlteraActionPerformed
        // TODO add your handling code here:
        if(alteraTela == null){//verifica se existe um objeto do alteraTela, se existir abre a tela
            alteraTela = new AppAlterar(piloto);
            pack();
            desktopPainel.add(alteraTela);
            alteraTela.setVisible(true);
        }
        else if(alteraTela.isClosed()){//caso exista e esteja fechada, abre outra janela
            alteraTela= new AppAlterar(piloto);
            pack();
            desktopPainel.add(alteraTela);
            alteraTela.setVisible(true);
        }
    }//GEN-LAST:event_jMenuAlteraActionPerformed

    private void jMenuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSairActionPerformed
        // TODO add your handling code here:
        //Quando clicar em sair , tudo vai ser salvo no arquivo Aviador.ser
        p.setupGravar("Aviador.ser");
        p.addRecords1(piloto);
        p.cleanupGravar();
        //fim do salvamento em arquivo
        System.exit(0);//quando clicar em Sair, fechará o programa
        
    }//GEN-LAST:event_jMenuSairActionPerformed

    private void jMenuListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuListarActionPerformed
        // TODO add your handling code here:
        if(listarTela == null){//verifica se existe um objeto do listarTela, se existir abre a tela
            listarTela = new AppListar(piloto);
            pack();
            desktopPainel.add(listarTela);
            listarTela.setVisible(true);
        }
        else if(listarTela.isClosed()){//caso exista e esteja fechada, abre outra janela
            listarTela= new AppListar(piloto);
            pack();
            desktopPainel.add(listarTela);
            listarTela.setVisible(true);
        }
    }//GEN-LAST:event_jMenuListarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppMenu().setVisible(true);
            }
        });
    }
    
    //Variaveis necessarias
    
    private static int posicao;
    private static boolean verificado;

    //Telas
    
    private AppCadastro cadastroTela = null;
    private AppConsulta consultaTela = null;
    private AppAlterar alteraTela = null;
    private AppListar listarTela = null;
   
    //LinkedList e ArrayList
    
    private static LinkedList<Aviador> piloto = new LinkedList<>();
    private ArrayList<ExperienciaProfissional> expProfissional;
    private ArrayList<TipoDeAeronave> tAeronave;
    
    //Persistencia
   
    private Persistencia p = new Persistencia ();
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane desktopPainel;
    private javax.swing.JLabel foto;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuAltera;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuCadastro;
    private javax.swing.JMenuItem jMenuConsulta;
    private javax.swing.JMenuItem jMenuListar;
    private javax.swing.JMenuItem jMenuSair;
    // End of variables declaration//GEN-END:variables
    private static boolean mudou = false;
}
