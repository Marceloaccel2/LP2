import java.util.ArrayList;
import java.util.LinkedList;
import javax.swing.JOptionPane;

public class AppConsulta extends javax.swing.JInternalFrame {

    /**
     * Creates new form AppConsulta
     */
    public AppConsulta(LinkedList<Aviador> a) {
        piloto = a;
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ctitulacao = new javax.swing.JLabel();
        canoConLbl = new javax.swing.JLabel();
        canoConTx = new javax.swing.JFormattedTextField();
        cnInstLbl = new javax.swing.JLabel();
        cnInstTx = new javax.swing.JTextField();
        ccidadeLbl = new javax.swing.JLabel();
        ccidadeTx = new javax.swing.JTextField();
        cdadosPessoais = new javax.swing.JLabel();
        cnomeLbl = new javax.swing.JLabel();
        cnomeTx = new javax.swing.JTextField();
        cenderecoLbl = new javax.swing.JLabel();
        cenderecoTx = new javax.swing.JTextField();
        cfoneLbl = new javax.swing.JLabel();
        cfoneTx = new javax.swing.JFormattedTextField();
        cemailLbl = new javax.swing.JLabel();
        cemailTx = new javax.swing.JTextField();
        cnumeroBrvLbl = new javax.swing.JLabel();
        cnumeroBrvTx = new javax.swing.JTextField();
        cregistroLbl = new javax.swing.JLabel();
        cregistroTx = new javax.swing.JTextField();
        cufLbl = new javax.swing.JLabel();
        cufTx = new javax.swing.JTextField();
        experienciaProfissional = new javax.swing.JLabel();
        cdataInicLbl = new javax.swing.JLabel();
        cdataInicTx = new javax.swing.JFormattedTextField();
        cdataTermLbl = new javax.swing.JLabel();
        cdataTermTx = new javax.swing.JFormattedTextField();
        cdescricaoLbl = new javax.swing.JLabel();
        cdescricaoTx = new javax.swing.JTextField();
        cempresaLbl = new javax.swing.JLabel();
        cempresaTx = new javax.swing.JTextField();
        ccidadeProfLbl = new javax.swing.JLabel();
        ccidadeProfTx = new javax.swing.JTextField();
        cestadoLbl = new javax.swing.JLabel();
        cestadoTx = new javax.swing.JTextField();
        ctipoDeAeronave = new javax.swing.JLabel();
        cmodeloLbl = new javax.swing.JLabel();
        cmodeloTx = new javax.swing.JTextField();
        ccapacidadeLbl = new javax.swing.JLabel();
        ccapacidadeTx = new javax.swing.JFormattedTextField();
        chLbl = new javax.swing.JLabel();
        chTx = new javax.swing.JFormattedTextField();
        buttonConsultar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        ProximoButton1 = new javax.swing.JButton();
        AnteriorButton1 = new javax.swing.JButton();
        AnteriorButton2 = new javax.swing.JButton();
        ProximoButton2 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Consulta de Aviador");

        ctitulacao.setText(" TITULAÇÃO");

        canoConLbl.setText("(Ano de Conclusão) : ");

        canoConTx.setEditable(false);
        canoConTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        canoConTx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canoConTxActionPerformed(evt);
            }
        });

        cnInstLbl.setText("Nome da Instituição : ");

        cnInstTx.setEditable(false);
        cnInstTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));

        ccidadeLbl.setText("Cidade : ");

        ccidadeTx.setEditable(false);
        ccidadeTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));

        cdadosPessoais.setText(" DADOS PESSOAIS");

        cnomeLbl.setText("Nome : ");

        cnomeTx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnomeTxActionPerformed(evt);
            }
        });

        cenderecoLbl.setText(" Endereço : ");

        cenderecoTx.setEditable(false);
        cenderecoTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        cenderecoTx.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cenderecoTxFocusLost(evt);
            }
        });
        cenderecoTx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cenderecoTxActionPerformed(evt);
            }
        });

        cfoneLbl.setText(" Fone : ");

        cfoneTx.setEditable(false);
        cfoneTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        try {
            cfoneTx.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cfoneTx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cfoneTxActionPerformed(evt);
            }
        });

        cemailLbl.setText(" Email : ");

        cemailTx.setEditable(false);
        cemailTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));

        cnumeroBrvLbl.setText(" Número do Brevê : ");

        cnumeroBrvTx.setEditable(false);
        cnumeroBrvTx.setBackground(java.awt.Color.lightGray);

        cregistroLbl.setText("Registro Profissional : ");

        cregistroTx.setEditable(false);
        cregistroTx.setBackground(new java.awt.Color(204, 204, 204));

        cufLbl.setText("UF : ");

        cufTx.setEditable(false);
        cufTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));

        experienciaProfissional.setText(" EXPERIÊNCIA PROFISSIONAL");

        cdataInicLbl.setText(" Data de inicio : ");

        cdataInicTx.setEditable(false);
        cdataInicTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        try {
            cdataInicTx.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cdataInicTx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cdataInicTxActionPerformed(evt);
            }
        });

        cdataTermLbl.setText("Data de Termino : ");

        cdataTermTx.setEditable(false);
        cdataTermTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        try {
            cdataTermTx.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        cdescricaoLbl.setText(" Descrição da Atividade : ");

        cdescricaoTx.setEditable(false);
        cdescricaoTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));

        cempresaLbl.setText("Empresa : ");

        cempresaTx.setEditable(false);
        cempresaTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));

        ccidadeProfLbl.setText("Cidade : ");

        ccidadeProfTx.setEditable(false);
        ccidadeProfTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));

        cestadoLbl.setText("Estado : ");

        cestadoTx.setEditable(false);
        cestadoTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));

        ctipoDeAeronave.setText("TIPO DE AERONAVE APTA A PILOTAR ");

        cmodeloLbl.setText(" Modelo : ");

        cmodeloTx.setEditable(false);
        cmodeloTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));

        ccapacidadeLbl.setText("Capacidade de Passageiros : ");

        ccapacidadeTx.setEditable(false);
        ccapacidadeTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));

        chLbl.setText("Horas de Vôo : ");

        chTx.setEditable(false);
        chTx.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));

        buttonConsultar.setText("Consultar");
        buttonConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConsultarActionPerformed(evt);
            }
        });

        jButton1.setText("Limpar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ProximoButton1.setText("Proximo");
        ProximoButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProximoButton1ActionPerformed(evt);
            }
        });

        AnteriorButton1.setText("Anterior");
        AnteriorButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnteriorButton1ActionPerformed(evt);
            }
        });

        AnteriorButton2.setText("Anterior");
        AnteriorButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnteriorButton2ActionPerformed(evt);
            }
        });

        ProximoButton2.setText("Proximo");
        ProximoButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProximoButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator3)
            .addComponent(jSeparator4)
            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator6)
            .addComponent(jSeparator7)
            .addComponent(jSeparator8)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cdadosPessoais)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(AnteriorButton1)
                                .addGap(30, 30, 30)
                                .addComponent(ProximoButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(368, 368, 368)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(buttonConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(192, 192, 192))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(canoConLbl)
                                        .addGap(8, 8, 8)
                                        .addComponent(canoConTx, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cnInstLbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(cnInstTx, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(ccidadeLbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(ccidadeTx, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cufLbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(cufTx, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cnomeLbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(cnomeTx, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cenderecoLbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(cenderecoTx, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cfoneLbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(cfoneTx, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(cnumeroBrvLbl)
                                                .addGap(18, 18, 18)
                                                .addComponent(cnumeroBrvTx, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(cemailLbl)
                                                .addGap(18, 18, 18)
                                                .addComponent(cemailTx, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(107, 107, 107)
                                        .addComponent(cregistroLbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(cregistroTx, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(ctitulacao)
                                    .addComponent(experienciaProfissional)
                                    .addComponent(ctipoDeAeronave)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cdataInicLbl)
                                        .addGap(4, 4, 4)
                                        .addComponent(cdataInicTx, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cdataTermLbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(cdataTermTx, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cdescricaoLbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(cdescricaoTx, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cempresaLbl)
                                        .addGap(7, 7, 7)
                                        .addComponent(cempresaTx, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(ccidadeProfLbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(ccidadeProfTx, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cestadoLbl)))
                                .addGap(19, 19, 19)
                                .addComponent(cestadoTx, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmodeloLbl)
                        .addGap(8, 8, 8)
                        .addComponent(cmodeloTx, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ccapacidadeLbl)
                        .addGap(18, 18, 18)
                        .addComponent(ccapacidadeTx, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(chLbl)
                        .addGap(18, 18, 18)
                        .addComponent(chTx, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AnteriorButton2)
                        .addGap(31, 31, 31)
                        .addComponent(ProximoButton2)
                        .addGap(24, 24, 24))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(cdadosPessoais, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cnomeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cnomeTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cenderecoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cenderecoTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cfoneLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cfoneTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cemailLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cemailTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cnumeroBrvLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cnumeroBrvTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cregistroLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cregistroTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ctitulacao, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(canoConLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(canoConTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cnInstLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cnInstTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ccidadeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ccidadeTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cufLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cufTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(experienciaProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cdataInicLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cdataInicTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cdataTermLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cdataTermTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cdescricaoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cdescricaoTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cempresaLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cempresaTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ccidadeProfLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ccidadeProfTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cestadoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cestadoTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProximoButton1)
                    .addComponent(AnteriorButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(ctipoDeAeronave, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmodeloLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmodeloTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ccapacidadeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ccapacidadeTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AnteriorButton2)
                    .addComponent(ProximoButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void canoConTxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canoConTxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_canoConTxActionPerformed

    private void cnomeTxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnomeTxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cnomeTxActionPerformed

    private void cfoneTxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cfoneTxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cfoneTxActionPerformed

    private void cdataInicTxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cdataInicTxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cdataInicTxActionPerformed

    private void buttonConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConsultarActionPerformed
        // TODO add your handling code here:
        int tamanho = 0;
        boolean procurar = false;
        if(cnomeTx.getText().equals("") && cmodeloTx.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Escreva no campo Nome , modelo de aeronave oncluir a pesquisa!", "ERRO", JOptionPane.ERROR_MESSAGE);   
        }
        
        else if(!(cnomeTx.getText().equals("")) && (cmodeloTx.getText().equals(""))){//Vai procurar so pelo nome , colocou o !(cnomeTx) pois entao vai tornar a negaçao da expressao em afirmaçao para concluir a pesquisa
            for(Aviador avi : piloto){
                //Vai se fazer uma varredura na busca do nome do piloto consultado
                if(cnomeTx.getText().equalsIgnoreCase(avi.getNomeDoAviador())){
                    expProfissional = avi.getExpProfissional();
                    tAeronave = avi.getTAeronave();
                    aviador = avi;
                    
                    cnomeTx.setText(avi.getNomeDoAviador());
                    cenderecoTx.setText(avi.getEndereço());
                    cfoneTx.setText(avi.getFone());
                    cemailTx.setText(avi.getEmail());
                    cnumeroBrvTx.setText(Long.toString(avi.getNumeroBreve()));
                    cregistroTx.setText(Long.toString(avi.getRegistroProf()));
                    canoConTx.setText(Integer.toString(avi.getAnoDeConclusao()));
                    cnInstTx.setText(avi.getNomeDaInstituiçao());
                    ccidadeTx.setText(avi.getCidade());
                    cufTx.setText(avi.getUf());
                    cdataInicTx.setText(expProfissional.get(posicao).getDataDeInicio());
                    cdataTermTx.setText(expProfissional.get(posicao).getDataDeTermino());
                    cdescricaoTx.setText(expProfissional.get(posicao).getDescricaoDaAtividade());
                    cempresaTx.setText(expProfissional.get(posicao).getEmpresa());
                    ccidadeProfTx.setText(expProfissional.get(posicao).getCidadeProf());
                    cestadoTx.setText(expProfissional.get(posicao).getEstado());
                    cmodeloTx.setText(tAeronave.get(posicao).getModelo());
                    ccapacidadeTx.setText(Integer.toString(tAeronave.get(posicao).getCapacidade()));
                    chTx.setText(Integer.toString(tAeronave.get(posicao).getHorasDevoo()));
                    procurar = true;
                }
            }    
            if(!procurar){
                JOptionPane.showMessageDialog(this, "Piloto não Cadastrado!");
            }       
        }      
        else if(!(cnumeroBrvTx.getText().equals(""))){//Vai procurar so pelo numero do Brevê , colocou o !(cnumeroBrvTx) pois entao vai tornar a negaçao da expressao em afirmaçao para concluir a pesquisa
            for(Aviador avi : piloto){
                //Vai se fazer uma varredura na busca do nome do piloto consultado
                if(avi.getNumeroBreve()==Long.parseLong(cnumeroBrvTx.getText())){
                    
                    expProfissional = avi.getExpProfissional();
                    tAeronave = avi.getTAeronave();
                    aviador = avi;
                    
                    cnomeTx.setText(avi.getNomeDoAviador());
                    cenderecoTx.setText(avi.getEndereço());
                    cfoneTx.setText(avi.getFone());
                    cemailTx.setText(avi.getEmail());
                    cnumeroBrvTx.setText(Long.toString(avi.getNumeroBreve()));
                    cregistroTx.setText(Long.toString(avi.getRegistroProf()));
                    canoConTx.setText(Integer.toString(avi.getAnoDeConclusao()));
                    cnInstTx.setText(avi.getNomeDaInstituiçao());
                    ccidadeTx.setText(avi.getCidade());
                    cufTx.setText(avi.getUf());
                    cdataInicTx.setText(expProfissional.get(posicao).getDataDeInicio());
                    cdataTermTx.setText(expProfissional.get(posicao).getDataDeTermino());
                    cdescricaoTx.setText(expProfissional.get(posicao).getDescricaoDaAtividade());
                    cempresaTx.setText(expProfissional.get(posicao).getEmpresa());
                    ccidadeProfTx.setText(expProfissional.get(posicao).getCidadeProf());
                    cestadoTx.setText(expProfissional.get(posicao).getEstado());
                    cmodeloTx.setText(tAeronave.get(posicao).getModelo());
                    ccapacidadeTx.setText(Integer.toString(tAeronave.get(posicao).getCapacidade()));
                    chTx.setText(Integer.toString(tAeronave.get(posicao).getHorasDevoo()));
                    procurar = true;
                }
            }    
            if(!procurar){
                JOptionPane.showMessageDialog(this, "Piloto não Cadastrado!");
            }       
        }
        
        else if(!(cregistroTx.getText().equals(""))){//Vai procurar so pelo numero do Brevê , colocou o !(cnumeroBrvTx) pois entao vai tornar a negaçao da expressao em afirmaçao para concluir a pesquisa
            for(Aviador avi : piloto){
                //Vai se fazer uma varredura na busca do nome do piloto consultado
                if(avi.getRegistroProf()==Long.parseLong(cregistroTx.getText())){
                   
                    expProfissional = avi.getExpProfissional();
                    tAeronave = avi.getTAeronave();
                    aviador = avi;
                    
                    cnomeTx.setText(avi.getNomeDoAviador());
                    cenderecoTx.setText(avi.getEndereço());
                    cfoneTx.setText(avi.getFone());
                    cemailTx.setText(avi.getEmail());
                    cnumeroBrvTx.setText(Long.toString(avi.getNumeroBreve()));
                    cregistroTx.setText(Long.toString(avi.getRegistroProf()));
                    canoConTx.setText(Integer.toString(avi.getAnoDeConclusao()));
                    cnInstTx.setText(avi.getNomeDaInstituiçao());
                    ccidadeTx.setText(avi.getCidade());
                    cufTx.setText(avi.getUf());
                    cdataInicTx.setText(expProfissional.get(posicao).getDataDeInicio());
                    cdataTermTx.setText(expProfissional.get(posicao).getDataDeTermino());
                    cdescricaoTx.setText(expProfissional.get(posicao).getDescricaoDaAtividade());
                    cempresaTx.setText(expProfissional.get(posicao).getEmpresa());
                    ccidadeProfTx.setText(expProfissional.get(posicao).getCidadeProf());
                    cestadoTx.setText(expProfissional.get(posicao).getEstado());
                    cmodeloTx.setText(tAeronave.get(posicao).getModelo());
                    ccapacidadeTx.setText(Integer.toString(tAeronave.get(posicao).getCapacidade()));
                    chTx.setText(Integer.toString(tAeronave.get(posicao).getHorasDevoo()));
                    procurar = true;
                }
            }    
            if(!procurar){
                JOptionPane.showMessageDialog(this, "Piloto não Cadastrado!");
            }       
        }
        
        else if(!(cnomeTx.getText().equals("")) && !(cnumeroBrvTx.getText().equals(""))){//Vai procurar pelo nome e numero de Brevê, colocou o !(cnomeTx e o cnumeroBrvTx) pois entao vai tornar a negaçao da expressao em afirmaçao para concluir a pesquisa
            for(Aviador avi : piloto){
                //Vai se fazer uma varredura na busca do nome do piloto consultado
                if(cnomeTx.getText().equalsIgnoreCase(avi.getNomeDoAviador()) && avi.getNumeroBreve()==Long.parseLong(cnumeroBrvTx.getText()) ){
                    
                    expProfissional = avi.getExpProfissional();
                    tAeronave = avi.getTAeronave();
                    aviador = avi;
                    
                    cnomeTx.setText(avi.getNomeDoAviador());
                    cenderecoTx.setText(avi.getEndereço());
                    cfoneTx.setText(avi.getFone());
                    cemailTx.setText(avi.getEmail());
                    cnumeroBrvTx.setText(Long.toString(avi.getNumeroBreve()));
                    cregistroTx.setText(Long.toString(avi.getRegistroProf()));
                    canoConTx.setText(Integer.toString(avi.getAnoDeConclusao()));
                    cnInstTx.setText(avi.getNomeDaInstituiçao());
                    ccidadeTx.setText(avi.getCidade());
                    cufTx.setText(avi.getUf());
                    cdataInicTx.setText(expProfissional.get(posicao).getDataDeInicio());
                    cdataTermTx.setText(expProfissional.get(posicao).getDataDeTermino());
                    cdescricaoTx.setText(expProfissional.get(posicao).getDescricaoDaAtividade());
                    cempresaTx.setText(expProfissional.get(posicao).getEmpresa());
                    ccidadeProfTx.setText(expProfissional.get(posicao).getCidadeProf());
                    cestadoTx.setText(expProfissional.get(posicao).getEstado());
                    cmodeloTx.setText(tAeronave.get(posicao).getModelo());
                    ccapacidadeTx.setText(Integer.toString(tAeronave.get(posicao).getCapacidade()));
                    chTx.setText(Integer.toString(tAeronave.get(posicao).getHorasDevoo()));
                    procurar = true;
                }
            }    
            if(!procurar){
                JOptionPane.showMessageDialog(this, "Piloto não Cadastrado!");
            }       
        }
        
        else if(!(cnomeTx.getText().equals("")) && !(cregistroTx.getText().equals(""))){//Vai procurar so pelo nome , colocou o !(cnomeTx) pois entao vai tornar a negaçao da expressao em afirmaçao para concluir a pesquisa
            for(Aviador avi : piloto){
                //Vai se fazer uma varredura na busca do nome do piloto consultado
                if(cnomeTx.getText().equalsIgnoreCase(avi.getNomeDoAviador()) && avi.getRegistroProf()==Long.parseLong(cregistroTx.getText())){
                    
                    expProfissional = avi.getExpProfissional();
                    tAeronave = avi.getTAeronave();
                    aviador = avi;
                    
                    cnomeTx.setText(avi.getNomeDoAviador());
                    cenderecoTx.setText(avi.getEndereço());
                    cfoneTx.setText(avi.getFone());
                    cemailTx.setText(avi.getEmail());
                    cnumeroBrvTx.setText(Long.toString(avi.getNumeroBreve()));
                    cregistroTx.setText(Long.toString(avi.getRegistroProf()));
                    canoConTx.setText(Integer.toString(avi.getAnoDeConclusao()));
                    cnInstTx.setText(avi.getNomeDaInstituiçao());
                    ccidadeTx.setText(avi.getCidade());
                    cufTx.setText(avi.getUf());
                    cdataInicTx.setText(expProfissional.get(posicao).getDataDeInicio());
                    cdataTermTx.setText(expProfissional.get(posicao).getDataDeTermino());
                    cdescricaoTx.setText(expProfissional.get(posicao).getDescricaoDaAtividade());
                    cempresaTx.setText(expProfissional.get(posicao).getEmpresa());
                    ccidadeProfTx.setText(expProfissional.get(posicao).getCidadeProf());
                    cestadoTx.setText(expProfissional.get(posicao).getEstado());
                    cmodeloTx.setText(tAeronave.get(posicao).getModelo());
                    ccapacidadeTx.setText(Integer.toString(tAeronave.get(posicao).getCapacidade()));
                    chTx.setText(Integer.toString(tAeronave.get(posicao).getHorasDevoo()));
                    procurar = true;
                }
            }    
            if(!procurar){
                JOptionPane.showMessageDialog(this, "Piloto não Cadastrado!");
            }       
        }
        else if(!(cnumeroBrvTx.getText().equals("")) && !(cregistroTx.getText().equals(""))){//Vai procurar so pelo numero do Brevê e pelo registro, colocou o !(cnumeroBrvTx && cregistroTx) pois entao vai tornar a negaçao da expressao em afirmaçao para concluir a pesquisa
            for(Aviador avi : piloto){
                //Vai se fazer uma varredura na busca do nome do piloto consultado
                if(avi.getNumeroBreve()==Long.parseLong(cnumeroBrvTx.getText()) && avi.getRegistroProf()==Long.parseLong(cregistroTx.getText())){
                    
                    expProfissional = avi.getExpProfissional();
                    tAeronave = avi.getTAeronave();
                    aviador = avi;
                    
                    cnomeTx.setText(avi.getNomeDoAviador());
                    cenderecoTx.setText(avi.getEndereço());
                    cfoneTx.setText(avi.getFone());
                    cemailTx.setText(avi.getEmail());
                    cnumeroBrvTx.setText(Long.toString(avi.getNumeroBreve()));
                    cregistroTx.setText(Long.toString(avi.getRegistroProf()));
                    canoConTx.setText(Integer.toString(avi.getAnoDeConclusao()));
                    cnInstTx.setText(avi.getNomeDaInstituiçao());
                    ccidadeTx.setText(avi.getCidade());
                    cufTx.setText(avi.getUf());
                    cdataInicTx.setText(expProfissional.get(posicao).getDataDeInicio());
                    cdataTermTx.setText(expProfissional.get(posicao).getDataDeTermino());
                    cdescricaoTx.setText(expProfissional.get(posicao).getDescricaoDaAtividade());
                    cempresaTx.setText(expProfissional.get(posicao).getEmpresa());
                    ccidadeProfTx.setText(expProfissional.get(posicao).getCidadeProf());
                    cestadoTx.setText(expProfissional.get(posicao).getEstado());
                    cmodeloTx.setText(tAeronave.get(posicao).getModelo());
                    ccapacidadeTx.setText(Integer.toString(tAeronave.get(posicao).getCapacidade()));
                    chTx.setText(Integer.toString(tAeronave.get(posicao).getHorasDevoo()));
                    procurar = true;
                }
            }    
            if(!procurar){
                JOptionPane.showMessageDialog(this, "Piloto não Cadastrado!");
            }       
        }
        else if(!(cnumeroBrvTx.getText().equals("")) && !(cregistroTx.getText().equals("")) && !(cnomeTx.getText().equals(""))){//Vai procurar so pelo numero do Brevê e pelo registro, colocou o !(cnumeroBrvTx && cregistroTx) pois entao vai tornar a negaçao da expressao em afirmaçao para concluir a pesquisa
            for(Aviador avi : piloto){
                //Vai se fazer uma varredura na busca do nome do piloto consultado
                if(avi.getNumeroBreve()==Long.parseLong(cnumeroBrvTx.getText()) && (avi.getRegistroProf()==Long.parseLong(cregistroTx.getText())) && cnomeTx.getText().equalsIgnoreCase(avi.getNomeDoAviador())){
                    
                    expProfissional = avi.getExpProfissional();
                    tAeronave = avi.getTAeronave();
                    aviador = avi;
                    
                    cnomeTx.setText(avi.getNomeDoAviador());
                    cenderecoTx.setText(avi.getEndereço());
                    cfoneTx.setText(avi.getFone());
                    cemailTx.setText(avi.getEmail());
                    cnumeroBrvTx.setText(Long.toString(avi.getNumeroBreve()));
                    cregistroTx.setText(Long.toString(avi.getRegistroProf()));
                    canoConTx.setText(Integer.toString(avi.getAnoDeConclusao()));
                    cnInstTx.setText(avi.getNomeDaInstituiçao());
                    ccidadeTx.setText(avi.getCidade());
                    cufTx.setText(avi.getUf());
                    cdataInicTx.setText(expProfissional.get(posicao).getDataDeInicio());
                    cdataTermTx.setText(expProfissional.get(posicao).getDataDeTermino());
                    cdescricaoTx.setText(expProfissional.get(posicao).getDescricaoDaAtividade());
                    cempresaTx.setText(expProfissional.get(posicao).getEmpresa());
                    ccidadeProfTx.setText(expProfissional.get(posicao).getCidadeProf());
                    cestadoTx.setText(expProfissional.get(posicao).getEstado());
                    cmodeloTx.setText(tAeronave.get(posicao).getModelo());
                    ccapacidadeTx.setText(Integer.toString(tAeronave.get(posicao).getCapacidade()));
                    chTx.setText(Integer.toString(tAeronave.get(posicao).getHorasDevoo()));
                    procurar = true;
                }
            }    
            if(!procurar){
                JOptionPane.showMessageDialog(this, "Piloto não Cadastrado!");
            }       
        }
    }//GEN-LAST:event_buttonConsultarActionPerformed

    private void cenderecoTxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cenderecoTxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cenderecoTxActionPerformed

    private void cenderecoTxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cenderecoTxFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_cenderecoTxFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        cnomeTx.setText("");
        cenderecoTx.setText("");
        cfoneTx.setText("");
        cemailTx.setText("");
        cnumeroBrvTx.setText("");
        cregistroTx.setText("");
        canoConTx.setText("");
        cnInstTx.setText("");
        ccidadeTx.setText("");
        cufTx.setText("");
        cdataInicTx.setText("");
        cdataTermTx.setText("");
        cdescricaoTx.setText("");
        cempresaTx.setText("");
        ccidadeProfTx.setText("");
        cestadoTx.setText("");
        cmodeloTx.setText("");
        ccapacidadeTx.setText("");
        chTx.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void AnteriorButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnteriorButton1ActionPerformed
        
        posicao--;
        
        if(posicao < 0)
            posicao = 0;
        
        expProfissional = aviador.getExpProfissional();
        
        cdataInicTx.setText(expProfissional.get(posicao).getDataDeInicio());
        cdataTermTx.setText(expProfissional.get(posicao).getDataDeTermino());
        cdescricaoTx.setText(expProfissional.get(posicao).getDescricaoDaAtividade());
        cempresaTx.setText(expProfissional.get(posicao).getEmpresa());
        ccidadeProfTx.setText(expProfissional.get(posicao).getCidadeProf());
        cestadoTx.setText(expProfissional.get(posicao).getEstado());
        
        
    }//GEN-LAST:event_AnteriorButton1ActionPerformed

    private void ProximoButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProximoButton1ActionPerformed
        posicao++;
        
        if(posicao >=  expProfissional.size())
            posicao = expProfissional.size() - 1;
        
        expProfissional = aviador.getExpProfissional();
        
        cdataInicTx.setText(expProfissional.get(posicao).getDataDeInicio());
        cdataTermTx.setText(expProfissional.get(posicao).getDataDeTermino());
        cdescricaoTx.setText(expProfissional.get(posicao).getDescricaoDaAtividade());
        cempresaTx.setText(expProfissional.get(posicao).getEmpresa());
        ccidadeProfTx.setText(expProfissional.get(posicao).getCidadeProf());
        cestadoTx.setText(expProfissional.get(posicao).getEstado());
    }//GEN-LAST:event_ProximoButton1ActionPerformed

    private void AnteriorButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnteriorButton2ActionPerformed
        // TODO add your handling code here:
         
        posicao--;
        
        if(posicao < 0)
            posicao = 0;
        
        tAeronave = aviador.getTAeronave();
        
        cmodeloTx.setText(tAeronave.get(posicao).getModelo());
        ccapacidadeTx.setText(Integer.toString(tAeronave.get(posicao).getCapacidade()));
        chTx.setText(Integer.toString(tAeronave.get(posicao).getHorasDevoo()));    
    }//GEN-LAST:event_AnteriorButton2ActionPerformed

    private void ProximoButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProximoButton2ActionPerformed
        // TODO add your handling code here:
        posicao++;
        
        if(posicao >=  tAeronave.size())
            posicao = tAeronave.size() - 1;
        
        tAeronave = aviador.getTAeronave();
        cmodeloTx.setText(tAeronave.get(posicao).getModelo());
        ccapacidadeTx.setText(Integer.toString(tAeronave.get(posicao).getCapacidade()));
        chTx.setText(Integer.toString(tAeronave.get(posicao).getHorasDevoo()));   
        
    }//GEN-LAST:event_ProximoButton2ActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AnteriorButton1;
    private javax.swing.JButton AnteriorButton2;
    private javax.swing.JButton ProximoButton1;
    private javax.swing.JButton ProximoButton2;
    private javax.swing.JButton buttonConsultar;
    private javax.swing.JLabel canoConLbl;
    private javax.swing.JFormattedTextField canoConTx;
    private javax.swing.JLabel ccapacidadeLbl;
    private javax.swing.JFormattedTextField ccapacidadeTx;
    private javax.swing.JLabel ccidadeLbl;
    private javax.swing.JLabel ccidadeProfLbl;
    private javax.swing.JTextField ccidadeProfTx;
    private javax.swing.JTextField ccidadeTx;
    private javax.swing.JLabel cdadosPessoais;
    private javax.swing.JLabel cdataInicLbl;
    private javax.swing.JFormattedTextField cdataInicTx;
    private javax.swing.JLabel cdataTermLbl;
    private javax.swing.JFormattedTextField cdataTermTx;
    private javax.swing.JLabel cdescricaoLbl;
    private javax.swing.JTextField cdescricaoTx;
    private javax.swing.JLabel cemailLbl;
    private javax.swing.JTextField cemailTx;
    private javax.swing.JLabel cempresaLbl;
    private javax.swing.JTextField cempresaTx;
    private javax.swing.JLabel cenderecoLbl;
    private javax.swing.JTextField cenderecoTx;
    private javax.swing.JLabel cestadoLbl;
    private javax.swing.JTextField cestadoTx;
    private javax.swing.JLabel cfoneLbl;
    private javax.swing.JFormattedTextField cfoneTx;
    private javax.swing.JLabel chLbl;
    private javax.swing.JFormattedTextField chTx;
    private javax.swing.JLabel cmodeloLbl;
    private javax.swing.JTextField cmodeloTx;
    private javax.swing.JLabel cnInstLbl;
    private javax.swing.JTextField cnInstTx;
    private javax.swing.JLabel cnomeLbl;
    private javax.swing.JTextField cnomeTx;
    private javax.swing.JLabel cnumeroBrvLbl;
    private javax.swing.JTextField cnumeroBrvTx;
    private javax.swing.JLabel cregistroLbl;
    private javax.swing.JTextField cregistroTx;
    private javax.swing.JLabel ctipoDeAeronave;
    private javax.swing.JLabel ctitulacao;
    private javax.swing.JLabel cufLbl;
    private javax.swing.JTextField cufTx;
    private javax.swing.JLabel experienciaProfissional;
    private javax.swing.JButton jButton1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    // End of variables declaration//GEN-END:variables
    
    //Declaraçoes das variaveis necessarias
    private static LinkedList<Aviador> piloto = new LinkedList<Aviador>();
    private ArrayList<ExperienciaProfissional> expProfissional;
    private ArrayList<TipoDeAeronave> tAeronave;
    private int posicao = 0;
    private Aviador aviador;
}
